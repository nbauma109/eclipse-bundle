name: Eclipse + SonarLint + de.jcup (Windows x64)

on:
  schedule:
    - cron: '0 17 * * 6'   # Saturdays at 17:00 UTC
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip zip jq curl git

      - name: Make scripts executable
        run: chmod +x scripts/*.sh

      - name: Get latest Eclipse train
        id: train
        run: scripts/get_train.sh

      - name: Get latest SonarLint (GitHub)
        id: sonarlint
        env:
          GH_TOKEN: ${{ github.token }}
        run: scripts/get_sonarlint.sh

      - name: Decide release tag
        id: decide
        env:
          GH_TOKEN: ${{ github.token }}
        run: scripts/decide_tag_gitonly.sh

      - name: Stop if release exists
        if: env.SKIP == 'true'
        run: echo "Release ${TAG} already exists — skipping."

      - name: Download Eclipse (Windows x64)
        if: env.SKIP != 'true'
        run: scripts/download_eclipse_windows.sh

      - name: Unpack Windows Eclipse
        if: env.SKIP != 'true'
        run: |
          mkdir -p win && (cd win && unzip -q "../${WIN_ZIP}")
          echo "WIN_ECLIPSE_DIR=$(realpath win/eclipse)" >> "$GITHUB_ENV"

      - name: Install SonarLint into dropins (zip site)
        if: env.SKIP != 'true'
        run: scripts/install_sonarlint_dropins.sh
        env:
          SONARLINT_VERSION: ${{ steps.sonarlint.outputs.version }}
          DROPINS_ROOT: ${{ env.WIN_ECLIPSE_DIR }}/dropins/custom/eclipse

      - name: Install de.jcup editors from git update-sites
        if: env.SKIP != 'true'
        run: scripts/install_dejcup_from_git.sh
        env:
          DROPINS_ROOT: ${{ env.WIN_ECLIPSE_DIR }}/dropins/custom/eclipse

      - name: Package Windows distro
        if: env.SKIP != 'true'
        run: scripts/pack_windows.sh

      - name: Write release notes
        if: env.SKIP != 'true'
        run: scripts/write_notes_gitonly.sh

      - name: Publish release
        if: env.SKIP != 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "${TAG}" \
            "${WIN_OUT}" \
            --title "Eclipse Java (Windows x64) + SonarLint ${SONARLINT_VERSION} + de.jcup – ${TRAIN}" \
            --notes-file RELEASE_NOTES.md
