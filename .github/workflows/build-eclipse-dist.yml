name: Eclipse Java (Win x64) — SonarLint + de.jcup + SpotBugs

on:
  schedule:
    - cron: '0 17 * * 6'   # Saturdays at 17:00 UTC
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y unzip zip jq curl git

      - name: Make scripts executable
        run: chmod +x scripts/*.sh

      # 1) Detect Eclipse train (e.g., 2025-09)
      - name: Detect latest Eclipse train
        id: train
        run: scripts/get_train.sh

      # 2) Decide tag — Eclipse-only (no plugin versions)
      - name: Decide release tag (Eclipse-only)
        id: decide
        env:
          GH_TOKEN: ${{ github.token }}
        run: scripts/decide_tag_gitonly.sh

      - name: Stop if this release already exists
        if: env.SKIP == 'true'
        run: echo "Release ${TAG} already exists — skipping."

      # 3) Download and unpack Eclipse (Windows x64)
      - name: Download Eclipse (Windows x64)
        if: env.SKIP != 'true'
        run: scripts/download_eclipse_windows.sh

      - name: Unpack Windows Eclipse
        if: env.SKIP != 'true'
        run: |
          mkdir -p win
          (cd win && unzip -q "../${WIN_ZIP}")
          echo "WIN_ECLIPSE_DIR=$(realpath win/eclipse)" >> "$GITHUB_ENV"

      # 4) Detect latest SonarLint (for notes) and install from official zip into features/plugins
      - name: Detect latest SonarLint
        if: env.SKIP != 'true'
        id: sonarlint
        env:
          GH_TOKEN: ${{ github.token }}
        run: scripts/get_sonarlint.sh

      - name: Install SonarLint into features/plugins
        if: env.SKIP != 'true'
        run: scripts/install_sonarlint.sh
        env:
          SONARLINT_VERSION: ${{ steps.sonarlint.outputs.version }}
          ECLIPSE_ROOT: ${{ env.WIN_ECLIPSE_DIR }}

      # 5) Install de.jcup editors (latest) via git clone
      - name: Install de.jcup editors
        if: env.SKIP != 'true'
        run: scripts/install_dejcup_from_git.sh
        env:
          ECLIPSE_ROOT: ${{ env.WIN_ECLIPSE_DIR }}

      # 6) Install SpotBugs (latest) from GitHub release eclipsePlugin.zip
      - name: Install SpotBugs (latest)
        if: env.SKIP != 'true'
        run: scripts/install_spotbugs.sh
        env:
          ECLIPSE_ROOT: ${{ env.WIN_ECLIPSE_DIR }}

      # 7) Package and release
      - name: Package Windows distro
        if: env.SKIP != 'true'
        run: scripts/pack_windows.sh

      - name: Write release notes
        if: env.SKIP != 'true'
        run: scripts/write_notes_gitonly.sh
        env:
          TRAIN: ${{ env.TRAIN }}
          SONARLINT_VERSION: ${{ steps.sonarlint.outputs.version }}

      - name: Publish GitHub Release
        if: env.SKIP != 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "${TAG}" \
            "${WIN_OUT}" \
            --title "Eclipse Java (Windows x64) — ${TRAIN}" \
            --notes-file RELEASE_NOTES.md
